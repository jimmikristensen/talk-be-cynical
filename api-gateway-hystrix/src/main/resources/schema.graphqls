type Query {
    recommendationContent(limit: Int) : [Content]
    editorialContent(limit: Int, key: String) : [Content]
}

interface Content {
    isCircuitBreakerOpen: Boolean
    isResponseFromFallback: Boolean
    isResponseShortCircuited: Boolean
    id: String
    api : String
    type : String
    title : String
    description : String
    imageURL : String
}

type Movie implements Content {
    isCircuitBreakerOpen: Boolean
    isResponseFromFallback: Boolean
    isResponseShortCircuited: Boolean
    id: String
    api : String
    type : String
    title : String
    description : String
    imageURL : String
    genre : String
}

type Series implements Content {
    isCircuitBreakerOpen: Boolean
    isResponseFromFallback: Boolean
    isResponseShortCircuited: Boolean
    id: String
    api : String
    type : String
    title : String
    description : String
    imageURL : String
    numEpisodes : Int
    numSeasons : Int
}

type Episode implements Content {
    isCircuitBreakerOpen: Boolean
    isResponseFromFallback: Boolean
    isResponseShortCircuited: Boolean
    id: String
    api : String
    type : String
    title : String
    description : String
    imageURL : String
    episode : Int
    season : Int
}